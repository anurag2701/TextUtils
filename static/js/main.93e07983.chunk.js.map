{"version":3,"sources":["components/About.js","components/Navbar.js","components/TextForm.js","components/Alert.js","pages/PageNotFound.js","App.js","reportWebVitals.js","index.js"],"names":["About","_useState","useState","color","backgroundColor","_useState2","_slicedToArray","myStyle","setMyStyle","_useState3","_useState4","toggleBtnText","setToggleBtnText","_jsx","_Fragment","children","_jsxs","className","id","style","type","onClick","styleObj","Navbar","props","concat","mode","href","toggleMode","htmlFor","placeholder","TextForm","text","setText","heading","rows","value","onChange","event","target","toUpperCase","showAlert","toLowerCase","newString","str","i","length","result","split","join","navigator","clipboard","writeText","trim","Alert","alertText","role","word","lower","charAt","slice","capitiliaze","msg","pageNotFound","App","setMode","setAlertText","message","setTimeout","document","body","title","BrowserRouter","Routes","Route","exact","path","element","PageNotFound","reportWebVitals","onPerfEntry","Function","then","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","React","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.93e07983.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\n\r\nexport default function About() {\r\n  const [myStyle, setMyStyle] = useState({\r\n    color: \"white\",\r\n    backgroundColor: \"black\",\r\n  });\r\n  const [toggleBtnText, setToggleBtnText] = useState(\"Enable light mode\");\r\n  const toggleStyle = () => {\r\n    let styleObj = {};\r\n    if (myStyle.color === \"white\") {\r\n      styleObj = {\r\n        color: \"black\",\r\n        backgroundColor: \"white\",\r\n      };\r\n      setToggleBtnText(\"Enable dark mode\");\r\n    } else {\r\n      styleObj = {\r\n        color: \"white\",\r\n        backgroundColor: \"black\",\r\n      };\r\n      setToggleBtnText(\"Enable light mode\");\r\n    }\r\n\r\n    setMyStyle(styleObj);\r\n  };\r\n  return (\r\n    <>\r\n      <div className=\"accordion\" id=\"accordionExample\" style={myStyle}>\r\n        <h1 className=\"my-2\">About Us</h1>\r\n        <div className=\"accordion-item\" style={myStyle}>\r\n          <h2 className=\"accordion-header\" id=\"headingOne\" style={myStyle}>\r\n            <button\r\n              className=\"accordion-button\"\r\n              type=\"button\"\r\n              data-bs-toggle=\"collapse\"\r\n              data-bs-target=\"#collapseOne\"\r\n              aria-expanded=\"true\"\r\n              aria-controls=\"collapseOne\"\r\n            >\r\n              Accordion Item #1\r\n            </button>\r\n          </h2>\r\n          <div\r\n            id=\"collapseOne\"\r\n            className=\"accordion-collapse collapse show\"\r\n            aria-labelledby=\"headingOne\"\r\n            data-bs-parent=\"#accordionExample\"\r\n          >\r\n            <div className=\"accordion-body\">\r\n              <strong>This is the first item's accordion body.</strong> It is\r\n              shown by default, until the collapse plugin adds the appropriate\r\n              classes that we use to style each element. These classes control\r\n              the overall appearance, as well as the showing and hiding via CSS\r\n              transitions. You can modify any of this with custom CSS or\r\n              overriding our default variables. It's also worth noting that just\r\n              about any HTML can go within the <code>.accordion-body</code>,\r\n              though the transition does limit overflow.\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"accordion-item\" style={myStyle}>\r\n          <h2 className=\"accordion-header\" id=\"headingTwo\" style={myStyle}>\r\n            <button\r\n              className=\"accordion-button collapsed\"\r\n              type=\"button\"\r\n              data-bs-toggle=\"collapse\"\r\n              data-bs-target=\"#collapseTwo\"\r\n              aria-expanded=\"false\"\r\n              aria-controls=\"collapseTwo\"\r\n            >\r\n              Accordion Item #2\r\n            </button>\r\n          </h2>\r\n          <div\r\n            id=\"collapseTwo\"\r\n            className=\"accordion-collapse collapse\"\r\n            aria-labelledby=\"headingTwo\"\r\n            data-bs-parent=\"#accordionExample\"\r\n          >\r\n            <div className=\"accordion-body \" style={myStyle}>\r\n              <strong>This is the second item's accordion body.</strong> It is\r\n              hidden by default, until the collapse plugin adds the appropriate\r\n              classes that we use to style each element. These classes control\r\n              the overall appearance, as well as the showing and hiding via CSS\r\n              transitions. You can modify any of this with custom CSS or\r\n              overriding our default variables. It's also worth noting that just\r\n              about any HTML can go within the <code>.accordion-body</code>,\r\n              though the transition does limit overflow.\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"accordion-item\" style={myStyle}>\r\n          <h2 className=\"accordion-header\" id=\"headingThree\">\r\n            <button\r\n              className=\"accordion-button collapsed\"\r\n              type=\"button\"\r\n              data-bs-toggle=\"collapse\"\r\n              data-bs-target=\"#collapseThree\"\r\n              aria-expanded=\"false\"\r\n              aria-controls=\"collapseThree\"\r\n            >\r\n              Accordion Item #3\r\n            </button>\r\n          </h2>\r\n          <div\r\n            id=\"collapseThree\"\r\n            className=\"accordion-collapse collapse\"\r\n            aria-labelledby=\"headingThree\"\r\n            data-bs-parent=\"#accordionExample\"\r\n          >\r\n            <div className=\"accordion-body\">\r\n              <strong>This is the third item's accordion body.</strong> It is\r\n              hidden by default, until the collapse plugin adds the appropriate\r\n              classes that we use to style each element. These classes control\r\n              the overall appearance, as well as the showing and hiding via CSS\r\n              transitions. You can modify any of this with custom CSS or\r\n              overriding our default variables. It's also worth noting that just\r\n              about any HTML can go within the <code>.accordion-body</code>,\r\n              though the transition does limit overflow.\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <button className=\"btn btn-primary my-3\" onClick={toggleStyle}>\r\n          {toggleBtnText}\r\n        </button>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n    <>\r\n      <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n        <div className=\"container-fluid\">\r\n          <a className=\"navbar-brand\" href=\"/\">\r\n            TextUtils\r\n          </a>\r\n          <button\r\n            className=\"navbar-toggler\"\r\n            type=\"button\"\r\n            data-bs-toggle=\"collapse\"\r\n            data-bs-target=\"#navbarSupportedContent\"\r\n            aria-controls=\"navbarSupportedContent\"\r\n            aria-expanded=\"false\"\r\n            aria-label=\"Toggle navigation\"\r\n          >\r\n            <span className=\"navbar-toggler-icon\"></span>\r\n          </button>\r\n          <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n            <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n              <li className=\"nav-item\">\r\n                <a className=\"nav-link active\" aria-current=\"page\" href=\"/\">\r\n                  Home\r\n                </a>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <a className=\"nav-link\" href=\"/about\">\r\n                  About\r\n                </a>\r\n              </li>\r\n            </ul>\r\n            <div className={`form-check form-switch mx-3 text-${props.mode === \"light\" ? \"dark\" : \"light\"}`}>\r\n              <input\r\n                className=\"form-check-input\"\r\n                type=\"checkbox\"\r\n                id=\"flexSwitchCheckDefault\"\r\n                onClick={props.toggleMode}\r\n              />\r\n              <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">\r\n                Enable {props.mode === \"light\" ? \"dark\" : \"light\"} mode\r\n              </label>\r\n            </div>\r\n            <form className=\"d-flex\">\r\n              <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\" />\r\n\r\n              <button className=\"btn btn-outline-success\" type=\"submit\">\r\n                Search\r\n              </button>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n    </>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\n\r\nexport default function TextForm(props) {\r\n  const handleUpClick = () => {\r\n    setText(text.toUpperCase());\r\n    props.showAlert(\"Converted to uppercase!!\", \"success\");\r\n\r\n  };\r\n  const handleDownClick = () => {\r\n    setText(text.toLowerCase());\r\n    props.showAlert(\"Converted to lowercase!!\", \"success\");\r\n\r\n  };\r\n  const handleOnChange = (event) => {\r\n    setText(event.target.value);\r\n  };\r\n  const handleRevStr = () => {\r\n    let newString = \"\";\r\n    let str = text;\r\n    for (var i = str.length - 1; i >= 0; i--) {\r\n      newString += str[i]; // or newString = newString + str[i];\r\n    }\r\n    setText(newString);\r\n    props.showAlert(\"Reversed!!\", \"success\");\r\n\r\n  };\r\n  const handleClear = () => {\r\n    setText(\"\");\r\n  };\r\n  const handleCopy = () => {\r\n    navigator.clipboard.writeText(text);\r\n    // alert(\"Your text has been copied\");\r\n    props.showAlert(\"Copied to clipboard!!\", \"success\");\r\n  };\r\n  const handleRemoveExtraSpaces = () => {\r\n    let result = text.split(/[  ]+/).join(\" \");\r\n    setText(result);\r\n    props.showAlert(\"Extra spaces removed!!\", \"success\");\r\n\r\n  };\r\n\r\n  const [text, setText] = useState(\"\");\r\n\r\n  return (\r\n    <>\r\n      {/* Text area group */}\r\n      <div className={`mb-3 container text-${props.mode === 'light' ? 'dark' : 'light'}`} style={{color: props.mode === 'light' ? 'white' : 'gray'}} >\r\n        <h1>{props.heading} </h1>\r\n        <label htmlFor=\"MyBox\">Enter text to analyse below</label>\r\n        {props.mode}\r\n        <textarea className=\"form-control\" id=\"MyBox\" rows=\"8\" value={text} onChange={handleOnChange} style={{backgroundColor: props.mode === 'light' ? 'white' : 'gray', color: props.mode === 'light' ? 'black' : 'white'}}></textarea>\r\n      </div>\r\n\r\n      {/* Button group */}\r\n      <div className=\"container\">\r\n        <button className=\"btn  btn-primary mx-2\" onClick={handleUpClick}>\r\n          Convert to uppercase\r\n        </button>\r\n        <button className=\"btn btn-primary mx-2\" onClick={handleDownClick}>\r\n          Convert to lowercase\r\n        </button>\r\n        <button className=\"btn btn-primary mx-2\" onClick={handleRevStr}>\r\n          Reverse string\r\n        </button>\r\n        <button className=\"btn btn-primary mx-2\" onClick={handleRemoveExtraSpaces}>\r\n          Remove Exxtra Spaces\r\n        </button>\r\n\r\n        <button className=\"btn btn-primary mx-2\" onClick={handleCopy}>\r\n          Copy\r\n        </button>\r\n        <button className=\"btn btn-primary mx-2\" onClick={handleClear}>\r\n          Clear Text\r\n        </button>\r\n      </div>\r\n\r\n      {/* Preview group */}\r\n      <div className=\"container my-3\">\r\n        <h1>Your text summary</h1>\r\n        <p>{text.trim().length === 0 ? 0 : text.trim().split(\" \").length} words, {text.length} characters</p>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function Alert(props) {\r\n  const capitiliaze = (word) => {\r\n    const lower = word.toLowerCase();\r\n    return lower.charAt(0).toUpperCase() + lower.slice(1);\r\n  };\r\n  return (\r\n    props.alertText && (\r\n      <div className={`alert alert-${props.alertText.type} alert-dismissible fade show`} role=\"alert\">\r\n        <strong>{capitiliaze(props.alertText.type)}</strong>: {props.alertText.msg}\r\n        {/* <button type=\"button\" className=\"btn-close\" data-bs-dismiss=\"alert\" aria-label=\"Close\"></button> */}\r\n      </div>\r\n    )\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function pageNotFound() {\r\n  return (\r\n    <div>\r\n      <h1>404 Error</h1>\r\n      <h1>Page Not Found</h1>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\nimport \"./App.css\";\nimport About from \"./components/About\";\nimport Navbar from \"./components/Navbar\";\nimport TextForm from \"./components/TextForm\";\nimport Alert from \"./components/Alert\";\nimport { BrowserRouter, Route, Routes } from \"react-router-dom\";\nimport PageNotFound from \"./pages/PageNotFound\";\n\nfunction App(props) {\n  const [mode, setMode] = useState(\"light\");\n  const [alertText, setAlertText] = useState(null);\n  const toggleMode = () => {\n    if (mode === \"light\") {\n      setMode(\"dark\");\n      document.body.style.backgroundColor = \"gray \";\n      showAlert(\"Dark mode activated!!!\", \"success\");\n      document.title = \"TextUtils - Light Mode\";\n    } else {\n      setMode(\"light\");\n      document.body.style.backgroundColor = \"white\";\n      showAlert(\"Light mode activated!!!\", \"success\");\n      document.title = \"TextUtils - Dark Mode\";\n    }\n  };\n  const showAlert = (message, type) => {\n    setAlertText({\n      msg: message,\n      type: type,\n    });\n    setTimeout(() => {\n      setAlertText(null);\n    }, 2500);\n  };\n\n  return (\n    <>\n      <Navbar mode={mode} toggleMode={toggleMode} />\n      <Alert alertText={alertText} />\n      <div className=\"container my-3\">\n        <BrowserRouter>\n          <Routes>\n            {/* <Route path='Path You want to use' element={<What you want to render >}/>  */}\n            <Route exact path=\"/about\" element={<About />}></Route>\n            <Route exact path=\"/\" element={<TextForm mode={mode} heading=\"TextUtils\" showAlert={showAlert} />}></Route>\n            <Route path=\"*\" element={<PageNotFound/>}></Route>\n          </Routes>\n        </BrowserRouter>\n      </div>\n\n      {/* Old code */}\n      {/* \n        <TextForm mode={mode} heading=\"TextUtils\" showAlert={showAlert} />\n        <About />\n      </div> */}\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}