{"version":3,"sources":["components/Navbar.js","components/TextForm.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","_jsx","_Fragment","children","className","concat","mode","_jsxs","href","type","id","onClick","toggleMode","htmlFor","placeholder","TextForm","_useState","useState","_useState2","_slicedToArray","text","setText","style","color","heading","rows","value","onChange","event","target","backgroundColor","toUpperCase","showAlert","toLowerCase","newString","str","i","length","result","split","join","navigator","clipboard","writeText","trim","Alert","alertText","role","word","lower","charAt","slice","capitiliaze","msg","App","setMode","_useState3","_useState4","setAlertText","message","setTimeout","document","body","title","reportWebVitals","onPerfEntry","Function","then","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","React","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.a2f78841.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n    <>\r\n      <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n        <div className=\"container-fluid\">\r\n          <a className=\"navbar-brand\" href=\"/\">\r\n            TextUtils\r\n          </a>\r\n          <button\r\n            className=\"navbar-toggler\"\r\n            type=\"button\"\r\n            data-bs-toggle=\"collapse\"\r\n            data-bs-target=\"#navbarSupportedContent\"\r\n            aria-controls=\"navbarSupportedContent\"\r\n            aria-expanded=\"false\"\r\n            aria-label=\"Toggle navigation\"\r\n          >\r\n            <span className=\"navbar-toggler-icon\"></span>\r\n          </button>\r\n          <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n            <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n              <li className=\"nav-item\">\r\n                <a className=\"nav-link active\" aria-current=\"page\" href=\"/\">\r\n                  Home\r\n                </a>\r\n              </li>\r\n              {/* <li className=\"nav-item\">\r\n                <a className=\"nav-link\" href=\"/about\">\r\n                  About\r\n                </a>\r\n              </li> */}\r\n            </ul>\r\n            <div className={`form-check form-switch mx-3 text-${props.mode === \"light\" ? \"dark\" : \"light\"}`}>\r\n              <input\r\n                className=\"form-check-input\"\r\n                type=\"checkbox\"\r\n                id=\"flexSwitchCheckDefault\"\r\n                onClick={props.toggleMode}\r\n              />\r\n              <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">\r\n                Enable {props.mode === \"light\" ? \"dark\" : \"light\"} mode\r\n              </label>\r\n            </div>\r\n            <form className=\"d-flex\">\r\n              <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\" />\r\n\r\n              <button className=\"btn btn-outline-success\" type=\"submit\">\r\n                Search\r\n              </button>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n    </>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\n\r\nexport default function TextForm(props) {\r\n  const handleUpClick = () => {\r\n    setText(text.toUpperCase());\r\n    props.showAlert(\"Converted to uppercase!!\", \"success\");\r\n\r\n  };\r\n  const handleDownClick = () => {\r\n    setText(text.toLowerCase());\r\n    props.showAlert(\"Converted to lowercase!!\", \"success\");\r\n\r\n  };\r\n  const handleOnChange = (event) => {\r\n    setText(event.target.value);\r\n  };\r\n  const handleRevStr = () => {\r\n    let newString = \"\";\r\n    let str = text;\r\n    for (var i = str.length - 1; i >= 0; i--) {\r\n      newString += str[i]; // or newString = newString + str[i];\r\n    }\r\n    setText(newString);\r\n    props.showAlert(\"Reversed!!\", \"success\");\r\n\r\n  };\r\n  const handleClear = () => {\r\n    setText(\"\");\r\n  };\r\n  const handleCopy = () => {\r\n    navigator.clipboard.writeText(text);\r\n    // alert(\"Your text has been copied\");\r\n    props.showAlert(\"Copied to clipboard!!\", \"success\");\r\n  };\r\n  const handleRemoveExtraSpaces = () => {\r\n    let result = text.split(/[  ]+/).join(\" \");\r\n    setText(result);\r\n    props.showAlert(\"Extra spaces removed!!\", \"success\");\r\n\r\n  };\r\n\r\n  const [text, setText] = useState(\"\");\r\n\r\n  return (\r\n    <>\r\n      {/* Text area group */}\r\n      <div className={`mb-3 container text-${props.mode === 'light' ? 'dark' : 'light'}`} style={{color: props.mode === 'light' ? 'white' : 'gray'}} >\r\n        <h1>{props.heading} </h1>\r\n        <label htmlFor=\"MyBox\">Enter text to analyse below</label>\r\n        {props.mode}\r\n        <textarea className=\"form-control\" id=\"MyBox\" rows=\"8\" value={text} onChange={handleOnChange} style={{backgroundColor: props.mode === 'light' ? 'white' : 'gray', color: props.mode === 'light' ? 'black' : 'white'}}></textarea>\r\n      </div>\r\n\r\n      {/* Button group */}\r\n      <div className=\"container\">\r\n        <button className=\"btn  btn-primary mx-2\" onClick={handleUpClick}>\r\n          Convert to uppercase\r\n        </button>\r\n        <button className=\"btn btn-primary mx-2\" onClick={handleDownClick}>\r\n          Convert to lowercase\r\n        </button>\r\n        <button className=\"btn btn-primary mx-2\" onClick={handleRevStr}>\r\n          Reverse string\r\n        </button>\r\n        <button className=\"btn btn-primary mx-2\" onClick={handleRemoveExtraSpaces}>\r\n          Remove Exxtra Spaces\r\n        </button>\r\n\r\n        <button className=\"btn btn-primary mx-2\" onClick={handleCopy}>\r\n          Copy\r\n        </button>\r\n        <button className=\"btn btn-primary mx-2\" onClick={handleClear}>\r\n          Clear Text\r\n        </button>\r\n      </div>\r\n\r\n      {/* Preview group */}\r\n      <div className=\"container my-3\">\r\n        <h1>Your text summary</h1>\r\n        <p>{text.trim().length === 0 ? 0 : text.trim().split(\" \").length} words, {text.length} characters</p>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function Alert(props) {\r\n  const capitiliaze = (word) => {\r\n    const lower = word.toLowerCase();\r\n    return lower.charAt(0).toUpperCase() + lower.slice(1);\r\n  };\r\n  return (\r\n    props.alertText && (\r\n      <div className={`alert alert-${props.alertText.type} alert-dismissible fade show`} role=\"alert\">\r\n        <strong>{capitiliaze(props.alertText.type)}</strong>: {props.alertText.msg}\r\n        {/* <button type=\"button\" className=\"btn-close\" data-bs-dismiss=\"alert\" aria-label=\"Close\"></button> */}\r\n      </div>\r\n    )\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\nimport \"./App.css\";\nimport About from \"./components/About\";\nimport Navbar from \"./components/Navbar\";\nimport TextForm from \"./components/TextForm\";\nimport Alert from \"./components/Alert\";\n// import { BrowserRouter, Route, Routes } from \"react-router-dom\";\n// import PageNotFound from \"./pages/PageNotFound\";\n\nfunction App(props) {\n  const [mode, setMode] = useState(\"light\");\n  const [alertText, setAlertText] = useState(null);\n  const toggleMode = () => {\n    if (mode === \"light\") {\n      setMode(\"dark\");\n      document.body.style.backgroundColor = \"gray \";\n      showAlert(\"Dark mode activated!!!\", \"success\");\n      document.title = \"TextUtils - Light Mode\";\n    } else {\n      setMode(\"light\");\n      document.body.style.backgroundColor = \"white\";\n      showAlert(\"Light mode activated!!!\", \"success\");\n      document.title = \"TextUtils - Dark Mode\";\n    }\n  };\n  const showAlert = (message, type) => {\n    setAlertText({\n      msg: message,\n      type: type,\n    });\n    setTimeout(() => {\n      setAlertText(null);\n    }, 2500);\n  };\n\n  return (\n    <>\n      <Navbar mode={mode} toggleMode={toggleMode} />\n      <Alert alertText={alertText} />\n      {/* <div className=\"container my-3\">\n        <BrowserRouter>\n          <Routes> */}\n            {/* <Route path='Path You want to use' element={<What you want to render >}/>  */}\n           {/* <Route exact path=\"/about\" element={<About />}></Route>\n            <Route exact path=\"/\" element={<TextForm mode={mode} heading=\"TextUtils\" showAlert={showAlert} />}></Route>\n            <Route path=\"*\" element={<PageNotFound/>}></Route>\n           </Routes>\n        </BrowserRouter>\n      </div> */}\n\n      <TextForm mode={mode} heading=\"TextUtils\" showAlert={showAlert} />\n      {/* Old code */}\n      {/* \n        <TextForm mode={mode} heading=\"TextUtils\" showAlert={showAlert} />\n        <About />\n      </div> */}\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}